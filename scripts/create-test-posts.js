const mongoose = require('mongoose');

// Import models
const PostSchema = new mongoose.Schema({
  title: { type: String, required: true, trim: true },
  slug: { type: String, required: true, trim: true, unique: true },
  content: { type: String, required: true, trim: true },
  category: { type: String },
  meta: { type: String, required: true, trim: true },
  tags: { type: [String] },
  thumbnail: {
    url: String,
    public_id: String,
  },
  author: { type: mongoose.Schema.Types.ObjectId, ref: "User" },
  isDraft: { type: Boolean, default: true },
}, { timestamps: true });

const Post = mongoose.models?.Post || mongoose.model("Post", PostSchema);

// Sample posts data for Q8 Design
const samplePosts = [
  {
    title: "Thi·∫øt k·∫ø n·ªôi th·∫•t hi·ªán ƒë·∫°i - Xu h∆∞·ªõng 2025",
    slug: "thiet-ke-noi-that-hien-dai-xu-huong-2025",
    content: `
      <h2>Thi·∫øt k·∫ø n·ªôi th·∫•t hi·ªán ƒë·∫°i l√† g√¨?</h2>
      <p>Thi·∫øt k·∫ø n·ªôi th·∫•t hi·ªán ƒë·∫°i t·∫≠p trung v√†o s·ª± ƒë∆°n gi·∫£n, ch·ª©c nƒÉng v√† t√≠nh th·∫©m m·ªπ cao. Phong c√°ch n√†y lo·∫°i b·ªè nh·ªØng chi ti·∫øt r∆∞·ªùm r√†, t·∫≠p trung v√†o nh·ªØng ƒë∆∞·ªùng n√©t s·∫°ch s·∫Ω v√† kh√¥ng gian m·ªü.</p>
      
      <h2>ƒê·∫∑c ƒëi·ªÉm c·ªßa thi·∫øt k·∫ø n·ªôi th·∫•t hi·ªán ƒë·∫°i</h2>
      <ul>
        <li>ƒê∆∞·ªùng n√©t s·∫°ch s·∫Ω, t·ªëi gi·∫£n</li>
        <li>S·ª≠ d·ª•ng m√†u s·∫Øc trung t√≠nh</li>
        <li>V·∫≠t li·ªáu t·ª± nhi√™n nh∆∞ g·ªó, ƒë√°</li>
        <li>√Ånh s√°ng t·ª± nhi√™n v√† nh√¢n t·∫°o h√†i h√≤a</li>
      </ul>
    `,
    category: "Thi·∫øt k·∫ø hi·ªán ƒë·∫°i",
    meta: "Kh√°m ph√° xu h∆∞·ªõng thi·∫øt k·∫ø n·ªôi th·∫•t hi·ªán ƒë·∫°i 2025 - phong c√°ch t·ªëi gi·∫£n, ch·ª©c nƒÉng v√† th·∫©m m·ªπ cao.",
    tags: ["thi·∫øt k·∫ø hi·ªán ƒë·∫°i", "xu h∆∞·ªõng 2025", "n·ªôi th·∫•t"],
    thumbnail: {
      url: "https://images.unsplash.com/photo-1586023492125-27b2c045efd7?w=800&h=600&fit=crop",
      public_id: "modern_interior_1"
    },
    isDraft: false
  },
  {
    title: "Phong c√°ch Scandinavian trong thi·∫øt k·∫ø n·ªôi th·∫•t",
    slug: "phong-cach-scandinavian-trong-thiet-ke-noi-that",
    content: `
      <h2>Phong c√°ch Scandinavian</h2>
      <p>Phong c√°ch Scandinavian b·∫Øt ngu·ªìn t·ª´ c√°c n∆∞·ªõc B·∫Øc √Çu, ƒë·∫∑c tr∆∞ng b·ªüi s·ª± t·ªëi gi·∫£n, ·∫•m √°p v√† g·∫ßn g≈©i v·ªõi thi√™n nhi√™n.</p>
      
      <h2>Nguy√™n t·∫Øc thi·∫øt k·∫ø Scandinavian</h2>
      <ul>
        <li>M√†u s·∫Øc nh·∫π nh√†ng, ch·ªß y·∫øu l√† tr·∫Øng v√† g·ªó</li>
        <li>N·ªôi th·∫•t ƒë∆°n gi·∫£n, ch·ª©c nƒÉng</li>
        <li>√Ånh s√°ng t·ª± nhi√™n t·ªëi ƒëa</li>
        <li>V·∫≠t li·ªáu t·ª± nhi√™n</li>
      </ul>
    `,
    category: "Phong c√°ch thi·∫øt k·∫ø",
    meta: "T√¨m hi·ªÉu v·ªÅ phong c√°ch Scandinavian - xu h∆∞·ªõng thi·∫øt k·∫ø n·ªôi th·∫•t ƒë∆∞·ª£c y√™u th√≠ch nh·∫•t hi·ªán nay.",
    tags: ["scandinavian", "phong c√°ch", "thi·∫øt k·∫ø"],
    thumbnail: {
      url: "https://images.unsplash.com/photo-1616486338812-3dadae4b4ace?w=800&h=600&fit=crop",
      public_id: "scandinavian_1"
    },
    isDraft: false
  },
  {
    title: "M·∫πo ch·ªçn m√†u s·∫Øc cho ph√≤ng ng·ªß",
    slug: "meo-chon-mau-sac-cho-phong-ngu",
    content: `
      <h2>T·∫ßm quan tr·ªçng c·ªßa m√†u s·∫Øc trong ph√≤ng ng·ªß</h2>
      <p>M√†u s·∫Øc c√≥ ·∫£nh h∆∞·ªüng l·ªõn ƒë·∫øn t√¢m tr·∫°ng v√† ch·∫•t l∆∞·ª£ng gi·∫•c ng·ªß. Vi·ªác ch·ªçn m√†u s·∫Øc ph√π h·ª£p s·∫Ω t·∫°o ra kh√¥ng gian th∆∞ gi√£n v√† tho·∫£i m√°i.</p>
      
      <h2>Nh·ªØng m√†u s·∫Øc ph√π h·ª£p cho ph√≤ng ng·ªß</h2>
      <ul>
        <li>M√†u xanh d∆∞∆°ng nh·∫°t - t·∫°o c·∫£m gi√°c b√¨nh y√™n</li>
        <li>M√†u xanh l√° c√¢y nh·∫°t - g·∫ßn g≈©i v·ªõi thi√™n nhi√™n</li>
        <li>M√†u be, kem - ·∫•m √°p v√† d·ªÖ ch·ªãu</li>
        <li>M√†u x√°m nh·∫°t - sang tr·ªçng v√† hi·ªán ƒë·∫°i</li>
      </ul>
    `,
    category: "M·∫πo thi·∫øt k·∫ø",
    meta: "H∆∞·ªõng d·∫´n ch·ªçn m√†u s·∫Øc ph√π h·ª£p cho ph√≤ng ng·ªß ƒë·ªÉ c√≥ gi·∫•c ng·ªß ngon v√† kh√¥ng gian th∆∞ gi√£n.",
    tags: ["m√†u s·∫Øc", "ph√≤ng ng·ªß", "m·∫πo thi·∫øt k·∫ø"],
    thumbnail: {
      url: "https://images.unsplash.com/photo-1586023492125-27b2c045efd7?w=800&h=600&fit=crop",
      public_id: "bedroom_colors_1"
    },
    isDraft: false
  }
];

// Connect to MongoDB
async function connectDB() {
  try {
    await mongoose.connect(process.env.MONGODB_URI, {
      useNewUrlParser: true,
      useUnifiedTopology: true,
    });
    console.log('‚úÖ Connected to MongoDB');
  } catch (error) {
    console.error('‚ùå Database connection error:', error);
    process.exit(1);
  }
}

// Create test posts
async function createTestPosts() {
  try {
    console.log('üîå Connecting to database...');
    await connectDB();

    // Check if posts already exist
    const existingPosts = await Post.find({});
    if (existingPosts.length > 0) {
      console.log(`üìä Found ${existingPosts.length} existing posts`);
      console.log('‚úÖ Test posts already exist, skipping creation');
      return;
    }

    console.log('üìù Creating test posts...');
    const createdPosts = await Post.insertMany(samplePosts);
    
    console.log(`‚úÖ Successfully created ${createdPosts.length} test posts:`);
    createdPosts.forEach((post, index) => {
      console.log(`${index + 1}. ${post.title} (${post.slug})`);
    });

    console.log('\nüéâ Test posts creation completed!');
    
  } catch (error) {
    console.error('‚ùå Error creating test posts:', error);
  } finally {
    await mongoose.connection.close();
    console.log('üîå Database connection closed');
    process.exit(0);
  }
}

// Run the script
createTestPosts();